{"version":3,"file":"static/js/865.752d4af2.chunk.js","mappings":"sKACA,GAAgB,KAAO,uB,SCQVA,EAAwB,SAACC,GAElC,OADAC,QAAQC,IAAIF,IAER,iCACA,4BACI,gBAAKG,IAAI,MAAMC,IAAI,8EACnB,yBAAOJ,EAAMK,WAGjB,4BACI,oCACA,6C,UCdNC,EAAc,SAACN,GACjB,OACI,+BACI,SAAC,KAAM,CAACO,cAAe,CAAEC,YAAa,IAAMC,SAAU,SAACC,GAAaV,EAAMW,UAAUD,EAAOF,cAAe,UACtG,UAAC,KAAI,YACD,gBAAKI,UAAWC,EAAAA,aAAoB,UAChC,SAAC,KAAK,CAACC,KAAK,cAAcC,KAAK,WAAWC,YAAY,iFAE1D,0BACI,mBAAQD,KAAK,SAAQ,gC,UCMhCE,GAAmBC,EAAAA,EAAAA,KAfV,SAACC,GACnB,MAAO,CAEHC,SAAUD,EAAME,SAASC,aAIR,SAACC,GACtB,MAAO,CACHC,QAAS,SAACC,GACNF,GAASG,EAAAA,EAAAA,IAAqBD,QAKVP,EDKT,SAAClB,GAEpB,IAAI2B,EAAa3B,EAAMoB,SAASQ,KAAI,SAAAC,GAAI,OAAI,SAAC9B,EAAI,CAACM,KAAMwB,EAAKC,QAAuBC,GAAIF,EAAKE,IAAlBF,EAAKE,OAMhF,OACI,iBAAKnB,UAAWC,EAAAA,KAAY,WAExB,qCACA,SAACP,EAAW,CAACK,UARH,SAACc,GACfzB,EAAMwB,QAAQC,OASV,gBAAKb,UAAWC,EAAAA,SAAgB,uBAIhC,gBAAKD,UAAWC,EAAAA,UAAiB,SAC5Bc,EAAWK,kBE5C5B,EAA0B,yB,SCA1B,EAAwB,2BAAxB,EAAmG,gC,UCKtFC,EAAoB,SAACjC,GAC9B,IAAMuB,GAAWW,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAACjB,GAAK,OAAGA,EAAME,SAASgB,UAE5D,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAAStC,EAAMqC,QAAO,eAA3CA,EAAM,KAAEI,EAAS,MAEtBC,EAAAA,EAAAA,YAAU,WACNzC,QAAQC,IAAI,UACZuC,EAAUN,KACZ,CAACA,IAkBC,OACI,iCACMI,IACE,0BACA,iBAAOI,QAnBE,WACrBH,GAAY,IAkBiC,SAAEL,MAGtCI,IACG,0BACI,kBAAOK,WAAW,EAAMC,SAfrB,SAACC,GACpBL,EAAUK,EAAEC,cAAcC,QAcwCA,MAAOX,EACzDY,OArBO,WACvBT,GAAY,GACZjB,GAAS2B,EAAAA,EAAAA,IAA0Bb,KAmBStB,KAAK,e,UC1CxCoC,EAAkB,SAACnD,GAE5B,IAAIoD,EAAUpD,EAAMoD,QAEpB,OACI,+BAEI,SAAC,KAAM,CAAC7C,cAAe,CACnB8C,QAASD,EAAQC,QACjBC,SAAS,CACLC,SAAUH,EAAQE,SAASC,SAC3BC,GAAIJ,EAAQE,SAASE,GACrBC,QAASL,EAAQE,SAASG,QAC1BC,UAAWN,EAAQE,SAASI,UAC5BC,QAASP,EAAQE,SAASK,QAC1BC,QAASR,EAAQE,SAASM,QAC1BC,OAAQT,EAAQE,SAASO,OACzBC,SAAUV,EAAQE,SAASQ,UAE/BC,eAAgBX,EAAQW,eACxBC,0BAA2BZ,EAAQY,0BACnCC,SAAUb,EAAQa,UAEnBxD,SAAU,SAACC,GACVV,EAAMkE,mBAAmBxD,IAC3B,UACE,UAAC,KAAI,YACD,4BAEI,0BACI,mBAAQK,KAAK,SAAQ,uEAGzB,4BACI,SAAC,KAAK,CAACD,KAAK,iBAAiBC,KAAK,cAClC,2FAGJ,0BACI,SAAC,KAAK,CAACD,KAAK,4BAA4BC,KAAK,OAAOC,YAAY,iCAGpE,0BACI,SAAC,KAAK,CAACF,KAAK,WAAWC,KAAK,OAAOC,YAAY,gBAGnD,0BACI,SAAC,KAAK,CAACF,KAAK,UAAUC,KAAK,OAAOC,YAAY,kBAMtD,4BAWI,0BACI,SAAC,KAAK,CAACF,KAAK,oBAAoBC,KAAK,OAAOC,YAAY,gBAE5D,0BACI,SAAC,KAAK,CAACF,KAAK,cAAcC,KAAK,OAAOC,YAAY,UAGtD,0BACI,SAAC,KAAK,CAACF,KAAK,mBAAmBC,KAAK,OAAOC,YAAY,eAG3D,0BACI,SAAC,KAAK,CAACF,KAAK,qBAAqBC,KAAK,OAAOC,YAAY,iBAG7D,0BACI,SAAC,KAAK,CAACF,KAAK,mBAAmBC,KAAK,OAAOC,YAAY,eAG3D,0BACI,SAAC,KAAK,CAACF,KAAK,mBAAmBC,KAAK,OAAOC,YAAY,eAG3D,0BACI,SAAC,KAAK,CAACF,KAAK,kBAAkBC,KAAK,OAAOC,YAAY,cAG1D,0BACI,SAAC,KAAK,CAACF,KAAK,oBAAoBC,KAAK,OAAOC,YAAY,0B,UCpFvEmD,EAAc,SAACnE,GAExB,IAAMoD,GAAUhB,EAAAA,EAAAA,KAAY,SAACjB,GAAK,OAAGA,EAAME,SAAS+B,WAC9C7B,GAAWW,EAAAA,EAAAA,MACXkC,GAAShC,EAAAA,EAAAA,KAAY,SAACjB,GAAK,OAAKA,EAAMkD,KAAKD,UAEjD,GAA8B9B,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAE1B,IAAKY,EACD,OAAO,SAAC,IAAM,IAGlB,IAAKgB,EACD,OAAO,SAAC,KAAQ,CAACE,GAAI,aAezB,OACI,iCAEI,iBAAK1D,UAAW2D,EAAkB,WAC9B,gBAAKpE,IAAI,KAAKC,IAAKgD,EAAQoB,OAAOC,OAASC,EAAW9D,UAAW2D,KACjE,yBAAMvE,EAAM2E,UAAW,kBAAO9B,SAjBpB,SAACC,GACfA,EAAE8B,OAAOC,MAAM,IACftD,GAASuD,EAAAA,EAAAA,IAAUhC,EAAE8B,OAAOC,MAAM,MAeyB9D,KAAK,YAC5D,SAACkB,EAAiB,OAGrBM,GAAW,SAACY,EAAe,CAACC,QAASA,EAASc,mBAf5B,SAACa,GACxBxD,GAASyD,EAAAA,EAAAA,IAAaD,IACtBvC,GAAY,OAaoF,SAACyC,EAAW,CAACN,QAAS3E,EAAM2E,QAASnC,YAAaA,EAAaY,QAASA,QAK1K6B,EAAc,SAAH,GAA2C,IAArC7B,EAAO,EAAPA,QAASZ,EAAW,EAAXA,YAAamC,EAAO,EAAPA,QACzC,OAAO,2BACFA,GAAU,0BAAK,mBAAQhC,QAAS,kBAAMH,GAAY,IAAM,8FAAiC,MAC1F,4BACI,oFAAmBY,EAAQW,gBAAiB,4CAAkB,oDAEjEX,EAAQY,2BAA4B,yBAAMZ,EAAQY,6BAAmC,8GACrFZ,EAAQa,UAAW,yBAAMb,EAAQa,YAAkB,8GACnDb,EAAQa,UAAW,yBAAMb,EAAQC,WAAiB,+GACnD,4BACI,oCAAe,IAAE6B,OAAOC,KAAK/B,EAAQE,UAAU1B,KAAI,SAACkB,GAChD,OAAO,SAACsC,EAAc,CAASC,WAAYvC,EAAGwC,aAAclC,EAAQE,SAASR,IAAjDA,aAQtCsC,EAAiB,SAAH,GAAsC,IAAhCC,EAAU,EAAVA,WAAYC,EAAY,EAAZA,aAClC,OAAO,+BACH,4BAAK,yBAAID,EAAU,OAAOC,QCpErBC,EAAU,SAACvF,GAGtB,OACE,+BACE,iBAAKY,UAAWC,EAAe,WAC7B,SAACsD,EAAW,CACZW,UAAW9E,EAAM8E,UACfE,aAAchF,EAAMgF,aACpBL,QAAS3E,EAAM2E,QACfzB,0BAA2BlD,EAAMkD,0BACjCb,OAAQrC,EAAMqC,OACbe,QAASpD,EAAMoD,WAClB,SAACnC,EAAgB,UCmBzB,EA3ByB,WACvB,IAAMM,GAAWW,EAAAA,EAAAA,MACXsD,GAASC,EAAAA,EAAAA,MAETpB,GAAOjC,EAAAA,EAAAA,KAAY,SAACjB,GAAU,OAAKA,EAAMkD,QAGzCqB,EAAiB,WACrB,IAAIC,EAASH,EAAOG,OACfA,IACHA,EAAStB,EAAKtC,IAEhBR,GAASqE,EAAAA,EAAAA,IAAuBD,IAChCpE,GAASsE,EAAAA,EAAAA,IAAwBF,KAOnC,OAJAjD,EAAAA,EAAAA,YAAU,WACRgD,MACC,CAACA,IAECrB,EAAKD,QAIH,SAACmB,EAAO,CAACZ,SAAUa,EAAOG,UAHxB,SAAC,KAAQ,CAACrB,GAAI","sources":["webpack://ract/./src/component/Profile/MyPosts/myPosts.module.css?4c22","component/Profile/MyPosts/Post/post.tsx","component/Profile/MyPosts/myPosts.jsx","component/Profile/MyPosts/myPostsContainer.jsx","webpack://ract/./src/component/Profile/profile.module.css?ec62","webpack://ract/./src/component/Profile/ProfileInfo/ProfileInfo.module.css?7977","component/Profile/ProfileInfo/StatusProfileHook.jsx","component/Profile/ProfileInfo/ProfileDataForm.jsx","component/Profile/ProfileInfo/ProfileInfo.jsx","component/Profile/profile.jsx","component/Profile/profileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"myPosts_post__Zda2r\"};","// @ts-ignore\r\nimport React from 'react'\r\n\r\ntype Props = {\r\n    text: string\r\n    id: string\r\n}\r\n\r\n\r\nexport const Post: React.FC<Props> = (props) => {\r\n    console.log(props)\r\n    return (    \r\n        <>\r\n        <div>\r\n            <img alt='img' src='https://img.gazeta.ru/files3/949/12549949/kitty-pic905-895x505-61908.jpg' />\r\n            <div >{props.text}</div>\r\n        </div>\r\n\r\n        <div>\r\n            <span>Like</span>\r\n            <span>Dislake</span>\r\n        </div>\r\n    </>\r\n    )\r\n}","import React from 'react';\r\nimport clases from './myPosts.module.css';\r\nimport { Post } from './Post/post.tsx';\r\nimport { Formik, Form, Field, } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <>\r\n            <Formik initialValues={{ newTextPost: \"\" }} onSubmit={(values) => { props.addOnPost(values.newTextPost) }}>\r\n                <Form >\r\n                    <div className={clases.form_newPost}>\r\n                        <Field name=\"newTextPost\" type=\"textaria\" placeholder=\"Что случилось\" />\r\n                    </div>\r\n                    <div>\r\n                        <button type='submit'>Add Post</button>\r\n                    </div>\r\n\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const MyPosts = (props) => {\r\n\r\n    let ElemetPost = props.postText.map(elem => <Post text={elem.massage} key={elem.id} id={elem.id} />);\r\n\r\n    const addOnPost = (newText) => {\r\n        props.addPost(newText);\r\n    };\r\n\r\n    return (\r\n        <div className={clases.post}>\r\n\r\n            <h2>My post</h2>\r\n            <NewPostForm addOnPost={addOnPost}/>\r\n\r\n            <div className={clases.new_post}>\r\n                New post\r\n            </div>\r\n\r\n            <div className={clases.post_list}>\r\n                {ElemetPost.reverse()}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n","import { addPostActionCreator } from '../../../redux/profileReducer.ts';\r\nimport { MyPosts } from './myPosts';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        // newPostText: state.postPage.newPostText,\r\n        postText: state.postPage.postData,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newText) => {\r\n            dispatch(addPostActionCreator(newText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"profile_content__DW2qL\",\"photo\":\"profile_photo__7JSqz\"};","// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"ProfileInfo_photo__d8KTa\",\"beach\":\"ProfileInfo_beach__6E4Af\",\"main_photo\":\"ProfileInfo_main_photo__Rj8Lk\"};","// import profile from \"./ProfileInfo.module.css\"\r\n// import { Loader } from \"../../common/preloader/loader\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {updateStatusThunkCreactor } from '../../../redux/profileReducer.ts'\r\n\r\nexport const StatusProfileHook = (props) => {\r\n    const dispatch = useDispatch()\r\n    const statusStore = useSelector((state)=>state.postPage.status)\r\n\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status)\r\n\r\nuseEffect(()=>{\r\n    console.log(`params`)\r\n    setStatus(statusStore)\r\n},[statusStore])\r\n\r\n\r\nconst activateEditMode = ()=>{\r\n    setEditMode(true);\r\n}\r\n\r\nconst unActivateEditMode = ()=>{\r\n    setEditMode(false);\r\n    dispatch(updateStatusThunkCreactor(status));\r\n}\r\n\r\nconst onStatusChange = (e) =>{\r\n    setStatus(e.currentTarget.value)\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                <span  onClick={activateEditMode}>{statusStore}</span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onChange={onStatusChange} value={status}\r\n                    onBlur={unActivateEditMode} type=\"text\"/>\r\n                </div>}\r\n        </>\r\n    )\r\n};","import { Formik, Form, Field } from \"formik\";\r\n\r\nexport const ProfileDataForm = (props) => {\r\n\r\n    let profile = props.profile\r\n\r\n    return (\r\n        <>\r\n\r\n            <Formik initialValues={{\r\n                aboutMe: profile.aboutMe,\r\n                contacts:{\r\n                    facebook: profile.contacts.facebook,\r\n                    vk: profile.contacts.vk,\r\n                    twitter: profile.contacts.twitter,\r\n                    instagram: profile.contacts.instagram,\r\n                    website: profile.contacts.website,\r\n                    youtube: profile.contacts.youtube,\r\n                    github: profile.contacts.github,\r\n                    mainLink: profile.contacts.mainLink,\r\n                },\r\n                lookingForAJob: profile.lookingForAJob,\r\n                lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                fullName: profile.fullName,\r\n\r\n            }} onSubmit={(values) => {\r\n                props.onSumbitInfoMethod(values)\r\n            }}>\r\n                <Form>\r\n                    <div>\r\n\r\n                        <div >\r\n                            <button type=\"sumbit\">Сохранить</button>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"lookingForAJob\" type=\"checkbox\" />\r\n                            <label>Ищу работу</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"lookingForAJobDescription\" type=\"text\" placeholder='lookingForAJobDescription' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"fullName\" type=\"text\" placeholder='fullName' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"aboutMe\" type=\"text\" placeholder='aboutMe' />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n\r\n                        {/* <div >\r\n                            <button type=\"sumbit\">Сохранить</button>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"work\" type=\"checkbox\" />\r\n                            <label>Ищу работу</label>\r\n                        </div> */}\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.facebook\" type=\"text\" placeholder='facebook' />\r\n                        </div>\r\n                        <div>\r\n                            <Field name=\"contacts.vk\" type=\"text\" placeholder='vk' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.twitter\" type=\"text\" placeholder='twitter' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.instagram\" type=\"text\" placeholder='instagram' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.website\" type=\"text\" placeholder='website' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.youtube\" type=\"text\" placeholder='youtube' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.github\" type=\"text\" placeholder='github' />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Field name=\"contacts.mainLink\" type=\"text\" placeholder='mainLink' />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Form>\r\n            </Formik>\r\n\r\n\r\n\r\n            {/* <div>\r\n                <Formik initialValues={{\r\n                    \r\n                }} onSubmit={(values) => {\r\n                    props.onSumbitInfoMethod(values)\r\n                }}>\r\n                    <Form>\r\n\r\n                    </Form>\r\n                </Formik>\r\n            </div> */}\r\n\r\n        </>\r\n    )\r\n}","import profileInfo from \"./ProfileInfo.module.css\"\r\nimport { Loader } from \"../../common/preloader/loader\";\r\nimport { StatusProfileHook } from \"./StatusProfileHook\";\r\nimport userPhoto from '../../../img/user.png'\r\nimport { useState } from \"react\";\r\nimport { ProfileDataForm } from \"./ProfileDataForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {savePhoto, onSumbitInfo } from '../../../redux/profileReducer.ts'\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nexport const ProfileInfo = (props) => {\r\n\r\n    const profile = useSelector((state)=>state.postPage.profile)\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector((state) => state.auth.isAuth)\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Loader />\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Navigate to={\"/profile\"} />\r\n      }\r\n\r\n    const maiPhotoSeled = (e) => {\r\n        if (e.target.files[0]) {\r\n            dispatch(savePhoto(e.target.files[0]))\r\n        }\r\n    }\r\n\r\n    const onSumbitInfoMethod = (data) => {\r\n        dispatch(onSumbitInfo(data))\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={profileInfo.photo}>\r\n                <img alt=\"we\" src={profile.photos.large || userPhoto} className={profileInfo.main_photo} />\r\n                <div>{props.isOvner && <input onChange={maiPhotoSeled} type=\"file\" />}</div>\r\n                <StatusProfileHook />\r\n            </div>\r\n\r\n            {editMode ? <ProfileDataForm profile={profile} onSumbitInfoMethod={onSumbitInfoMethod} /> : <ProfileData isOvner={props.isOvner} setEditMode={setEditMode} profile={profile} />}\r\n        </>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({ profile, setEditMode, isOvner }) => {\r\n    return <div>\r\n        {isOvner ? <div><button onClick={() => setEditMode(true)} >Редактировать</button></div> : null}\r\n        <div>\r\n            <b>Ищу работу:</b>{profile.lookingForAJob ? <span>Да</span> : <span>Нет</span> }\r\n        </div>\r\n        {profile.lookingForAJobDescription ? <div>{profile.lookingForAJobDescription}</div> : <div> Нет информации</div>}\r\n        {profile.fullName ? <div>{profile.fullName}</div> : <div> Нет информации</div>}\r\n        {profile.fullName ? <div>{profile.aboutMe}</div> : <div> Нет информации</div>}\r\n        <div>\r\n            <b>Contact:</b> {Object.keys(profile.contacts).map((e) => {\r\n                return <ProfileContact key={e} contactKey={e} contactValue={profile.contacts[e]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst ProfileContact = ({ contactKey, contactValue }) => {\r\n    return <>\r\n        <div><b>{contactKey}:</b>{contactValue}</div>\r\n    </>\r\n}","import { MyPostsContainer } from './MyPosts/myPostsContainer';\r\nimport clases from './profile.module.css';\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nexport const Profile = (props) => {\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <div className={clases.content}>\r\n        <ProfileInfo \r\n        savePhoto={props.savePhoto}\r\n          onSumbitInfo={props.onSumbitInfo}\r\n          isOvner={props.isOvner}\r\n          updateStatusThunkCreactor={props.updateStatusThunkCreactor}\r\n          status={props.status}\r\n           profile={props.profile} />\r\n        <MyPostsContainer />\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Profile } from \"./profile\";\r\n// @ts-ignore\r\nimport {\r\n  getStatusThunkCreactor,\r\n  setProdileThunkCreactor,\r\n} from \"../../redux/profileReducer.ts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\n\r\nconst ProfileContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const auth = useSelector((state: any) => state.auth);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const refreshProfile = () => {\r\n    let userId = params.userId;\r\n    if (!userId) {\r\n      userId = auth.id;\r\n    }\r\n    dispatch(getStatusThunkCreactor(userId));\r\n    dispatch(setProdileThunkCreactor(userId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshProfile();\r\n  }, [refreshProfile]);\r\n\r\n  if (!auth.isAuth) {\r\n    return <Navigate to={\"/login\"} />;\r\n  }\r\n\r\n  return <Profile isOvner={!params.userId} />;\r\n};\r\n\r\nexport default ProfileContainer;\r\n"],"names":["Post","props","console","log","alt","src","text","NewPostForm","initialValues","newTextPost","onSubmit","values","addOnPost","className","clases","name","type","placeholder","MyPostsContainer","connect","state","postText","postPage","postData","dispatch","addPost","newText","addPostActionCreator","ElemetPost","map","elem","massage","id","reverse","StatusProfileHook","useDispatch","statusStore","useSelector","status","useState","editMode","setEditMode","setStatus","useEffect","onClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatusThunkCreactor","ProfileDataForm","profile","aboutMe","contacts","facebook","vk","twitter","instagram","website","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","onSumbitInfoMethod","ProfileInfo","isAuth","auth","to","profileInfo","photos","large","userPhoto","isOvner","target","files","savePhoto","data","onSumbitInfo","ProfileData","Object","keys","ProfileContact","contactKey","contactValue","Profile","params","useParams","refreshProfile","userId","getStatusThunkCreactor","setProdileThunkCreactor"],"sourceRoot":""}